version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hr_ai_postgres
    environment:
      POSTGRES_DB: hr_ai_db
      POSTGRES_USER: hr_ai_user
      POSTGRES_PASSWORD: hr_ai_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hr_ai_user -d hr_ai_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: hr_ai_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hr_ai_backend
    environment:
      - DATABASE_URL=postgresql+asyncpg://hr_ai_user:hr_ai_password@postgres:5432/hr_ai_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - "8000:8000"
    volumes:
      - ./uploads:/app/uploads
      - ./.env:/app/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Celery Worker
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hr_ai_celery_worker
    command: celery -A celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql+asyncpg://hr_ai_user:hr_ai_password@postgres:5432/hr_ai_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./uploads:/app/uploads
      - ./.env:/app/.env
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Celery Beat (Scheduler)
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hr_ai_celery_beat
    command: celery -A celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql+asyncpg://hr_ai_user:hr_ai_password@postgres:5432/hr_ai_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./uploads:/app/uploads
      - ./.env:/app/.env
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: hr_ai_frontend
    ports:
      - "3000:80"
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: hr_ai_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
